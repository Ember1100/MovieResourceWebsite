<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.panda.system.mapper.CommentsInfoMapper">
  <resultMap id="BaseResultMap" type="com.panda.system.domin.CommentsInfo">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="owner_id" jdbcType="BIGINT" property="ownerId" />
    <result column="from_id" jdbcType="BIGINT" property="fromId" />
    <result column="from_name" jdbcType="VARCHAR" property="fromName" />
    <result column="from_avatar" jdbcType="VARCHAR" property="fromAvatar" />
    <result column="like_num" jdbcType="INTEGER" property="likeNum" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, type, owner_id, from_id, from_name, from_avatar, like_num, content, create_time, 
    update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from comments_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from comments_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.panda.system.domin.CommentsInfo">
    insert into comments_info (id, type, owner_id, 
      from_id, from_name, from_avatar, 
      like_num, content, create_time, 
      update_time)
    values (#{id,jdbcType=BIGINT}, #{type,jdbcType=TINYINT}, #{ownerId,jdbcType=BIGINT}, 
      #{fromId,jdbcType=BIGINT}, #{fromName,jdbcType=VARCHAR}, #{fromAvatar,jdbcType=VARCHAR}, 
      #{likeNum,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.panda.system.domin.CommentsInfo">
    insert into comments_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="ownerId != null">
        owner_id,
      </if>
      <if test="fromId != null">
        from_id,
      </if>
      <if test="fromName != null">
        from_name,
      </if>
      <if test="fromAvatar != null">
        from_avatar,
      </if>
      <if test="likeNum != null">
        like_num,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="ownerId != null">
        #{ownerId,jdbcType=BIGINT},
      </if>
      <if test="fromId != null">
        #{fromId,jdbcType=BIGINT},
      </if>
      <if test="fromName != null">
        #{fromName,jdbcType=VARCHAR},
      </if>
      <if test="fromAvatar != null">
        #{fromAvatar,jdbcType=VARCHAR},
      </if>
      <if test="likeNum != null">
        #{likeNum,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.panda.system.domin.CommentsInfo">
    update comments_info
    <set>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="ownerId != null">
        owner_id = #{ownerId,jdbcType=BIGINT},
      </if>
      <if test="fromId != null">
        from_id = #{fromId,jdbcType=BIGINT},
      </if>
      <if test="fromName != null">
        from_name = #{fromName,jdbcType=VARCHAR},
      </if>
      <if test="fromAvatar != null">
        from_avatar = #{fromAvatar,jdbcType=VARCHAR},
      </if>
      <if test="likeNum != null">
        like_num = #{likeNum,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.panda.system.domin.CommentsInfo">
    update comments_info
    set type = #{type,jdbcType=TINYINT},
      owner_id = #{ownerId,jdbcType=BIGINT},
      from_id = #{fromId,jdbcType=BIGINT},
      from_name = #{fromName,jdbcType=VARCHAR},
      from_avatar = #{fromAvatar,jdbcType=VARCHAR},
      like_num = #{likeNum,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <resultMap id="BaseResultMap1" type="com.panda.system.domin.vo.CommentVo">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="owner_id" jdbcType="BIGINT" property="ownerId" />
    <result column="from_id" jdbcType="BIGINT" property="fromId" />
    <result column="from_name" jdbcType="VARCHAR" property="fromName" />
    <result column="from_avatar" jdbcType="VARCHAR" property="fromAvatar" />
    <result column="like_num" jdbcType="INTEGER" property="likeNum" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <collection javaType="java.util.ArrayList" ofType="com.panda.system.domin.CommentsReply" property="list">
      <id column="reply_id" jdbcType="BIGINT" property="replyId" />
      <result column="comment_id" jdbcType="BIGINT" property="commentId" />
      <result column="reply_from_id" jdbcType="BIGINT" property="replyFromId" />
      <result column="reply_from_name" jdbcType="VARCHAR" property="replyFromName" />
      <result column="reply_from_avatar" jdbcType="VARCHAR" property="replyFromAvatar" />
      <result column="reply_to_id" jdbcType="BIGINT" property="replyToId" />
      <result column="reply_to_name" jdbcType="VARCHAR" property="replyToName" />
      <result column="reply_to_avatar" jdbcType="VARCHAR" property="replyToAvatar" />
      <result column="reply_content" jdbcType="VARCHAR" property="replyContent" />
      <result column="reply_create_time" jdbcType="TIMESTAMP" property="replyCreateTime" />
      <result column="reply_update_time" jdbcType="TIMESTAMP" property="replyUpdateTime" />
    </collection>
  </resultMap>

  <select id="findByOwnerId" resultMap="BaseResultMap1">
    SELECT ci.*,cr.*
    FROM comments_info  ci
           left JOIN comments_reply cr on ci.id = cr.comment_id
    WHERE  ci.owner_id=#{ownerId}  ORDER BY ci.create_time asc
  </select>



  <select id="getNewInfoId" resultType="java.lang.Long">
    select id from comments_info order by id desc limit 0,1
  </select>


</mapper>